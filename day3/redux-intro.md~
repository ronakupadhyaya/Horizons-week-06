# Inline exercise: Redux intro

## Time limit: 10 minutes

## Instructions

Re-implement the counter app from the [warmup](../warmup.md) using Redux.
The basic scaffolding has been supplied for you in [this codepen](http://codepen.io/lockehart/pen/zBdKrG?editors=1010).

!!Solution:

JS:
// Reducer
function counter(state, action) {
  if (typeof state === 'undefined') {
    return 0
  }

  switch (action.type) {
    // your code here
     case 'INCREMENT':
        return (state+1);
      case 'DECREMENT':
        return (state-1);
    case 'ODD':
      if(state%2){
        return (state+1)
      }
  }
}

// Store
var store = Redux.createStore(counter);

// Render
var valueEl = document.getElementById('value');
function render() {
  valueEl.innerHTML = store.getState().toString();
}
render();
store.subscribe(render);

// Events
document.getElementById('increment')
  .addEventListener('click', function (e) {
    var action = {type: 'INCREMENT'};
      store.dispatch(action);
})

document.getElementById('decrement')
  .addEventListener('click', function () {
  // your code here
  var action = {type: 'DECREMENT'};
      store.dispatch(action);
})

document.getElementById('incrementIfOdd')
  .addEventListener('click', function () {
  // your code here
    var action = {type: 'ODD'};
      store.dispatch(action);
})

HTML:
<div>
  <p>
    Clicked: <span id="value">0</span> times
    <button id="increment">+</button>
    <button id="decrement">-</button>
    <button id="incrementIfOdd">Increment if odd</button>
  </p>
</div>

